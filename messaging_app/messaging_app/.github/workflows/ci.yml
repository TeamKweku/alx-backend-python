name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: messaging_db_test
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
          MYSQL_ROOT_PASSWORD: root_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev default-libmysqlclient-dev build-essential pkg-config

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install -r messaging_app/requirements.txt
        pip3 install pytest pytest-django pytest-cov flake8

    - name: Run flake8
      run: |
        cd messaging_app
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run migrations
      env:
        MYSQL_DATABASE: messaging_db_test
        MYSQL_USER: test_user
        MYSQL_PASSWORD: test_password
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        DJANGO_SECRET_KEY: test-key-not-for-production
        DEBUG: 1
      run: |
        cd messaging_app
        python manage.py migrate

    - name: Run tests with coverage
      env:
        MYSQL_DATABASE: messaging_db_test
        MYSQL_USER: test_user
        MYSQL_PASSWORD: test_password
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        DJANGO_SECRET_KEY: test-key-not-for-production
        DEBUG: 1
      run: |
        cd messaging_app
        pytest --cov=. --cov-report=xml --cov-report=html

    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./messaging_app/coverage.xml
        fail_ci_if_error: true

    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: |
          messaging_app/coverage.xml
          messaging_app/htmlcov
        retention-days: 7

    - name: Check minimum coverage threshold
      run: |
        cd messaging_app
        coverage report --fail-under=80 